import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-app.js";
import { getAuth, signOut, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-auth.js";
import { getDatabase, ref, onValue, update } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-database.js";
import { getStorage } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-storage.js";

// Cấu hình Firebase
const firebaseConfig = {
    apiKey: "AIzaSyDoWySbs3R0yKWsRTgRK54pLgudr8Srcfo",
    authDomain: "medical-examiner-40e4d.firebaseapp.com",
    databaseURL: "https://medical-examiner-40e4d-default-rtdb.asia-southeast1.firebasedatabase.app/",
    projectId: "medical-examiner-40e4d",
    storageBucket: "medical-examiner-40e4d.appspot.com",
    messagingSenderId: "592499333547",
    appId: "1:592499333547:web:a830daa4140cf1ca515aee"
};

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db = getDatabase(app);
const storage = getStorage(app);

function fetchAndDisplayData() {
    const dataRef = ref(db, 'user/');
    
    onValue(dataRef, (snapshot) => {
        const data = snapshot.val();
        const dataContainer = document.getElementById('dataContainer');
        dataContainer.innerHTML = '';

        // Phân loại và sắp xếp dữ liệu với trẻ em lên trước
        const sortedData = Object.entries(data).sort(([keyA, valueA], [keyB, valueB]) => {
            const isChildA = valueA.ID_CCCD && valueA.ID_CCCD.toLowerCase().includes('trẻ em');
            const isChildB = valueB.ID_CCCD && valueB.ID_CCCD.toLowerCase().includes('trẻ em');

            if (isChildA && !isChildB) {
                return -1; // valueA là trẻ em và valueB không phải trẻ em, valueA lên trước
            } else if (!isChildA && isChildB) {
                return 1; // valueB là trẻ em và valueA không phải trẻ em, valueB lên trước
            } else {
                return valueA.ID_CCCD.localeCompare(valueB.ID_CCCD); // Nếu cùng trạng thái trẻ em, sắp xếp theo ID_CCCD
            }
        });

        // Hiển thị dữ liệu
        for (const [key, value] of sortedData) {
            const row = document.createElement('tr');

            row.innerHTML = `
                <td>${value.Name}</td>
                <td>${value.ID_CCCD}</td>
                <td>${value.Address}</td>
                <td>${value.Phone}</td>
                <td>${value.Email}</td>
                <td>${value.Birthday}</td>
                <td>${value.Gender}</td>
                <td>${value.Symptoms}</td>
                <td>${value.Exam_Date}</td>
                <td><img src="${value.ImageURL}" alt="Image" style="width: 100px;"></td>
                <td>
                    <button class="confirm-button" data-id="${key}">Xác nhận</button>
                    <span class="confirmation-name" id="confirmation-${key}"></span>
                </td>
            `;

            dataContainer.appendChild(row);
        }

        // Thêm event listeners cho các nút xác nhận
        document.querySelectorAll('.confirm-button').forEach(button => {
            button.addEventListener('click', handleConfirm);
        });
    });
}

function handleConfirm(event) {
    const button = event.target;
    const uniqueID = button.getAttribute('data-id');
    const confirmationNameSpan = document.getElementById(`confirmation-${uniqueID}`);

    if (!button.classList.contains('confirmed')) {
        button.classList.add('confirmed');
        button.textContent = 'Đã xác nhận';
        const name = "Khang"; // Bạn có thể thay thế tên bác sĩ động nếu cần
        confirmationNameSpan.textContent = 'Bác sĩ ' + name;

        // Cập nhật trạng thái xác nhận trong Firebase
        updateFirebaseEntry(uniqueID);
    }
}

// Kiểm tra quyền admin và xác thực
document.addEventListener('DOMContentLoaded', () => {
    if (!document.cookie.includes('adminAuth=true')) {
        // Người dùng chưa đăng nhập, chuyển hướng về trang đăng nhập
        window.location.href = 'login.html';
    } else {
        // Người dùng đã đăng nhập, có thể hiển thị trang admin
        fetchAndDisplayData();
    }

    const logoutButton = document.getElementById('logoutButton'); 
    logoutButton.addEventListener('click', () => {
        signOut(auth).then(() => {
            // Xóa cookie của trang admin
            document.cookie = 'adminAuth=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
            window.location.href = 'login.html';
        }).catch((error) => {
            alert(`Lỗi khi đăng xuất: ${error.message}`);
        });
    });
});

function updateFirebaseEntry(id) {
    const updates = {};
    updates[`/user/${id}/confirmed`] = true; // Giả định có trường 'confirmed' trong Firebase

    update(ref(db, `user/${id}`), updates).then(() => {
        console.log('Cập nhật thành công');
    }).catch(error => {
        console.error('Lỗi khi cập nhật Firebase:', error);
    });
}
